/* line 1, ../src/scss/includes/_resets.scss */
html,
body,
ul,
ol
{
    margin: 0;
    padding: 0;
}

/* line 6, ../src/scss/main.scss */
body
{
    font: 3rem Helvetica, arial;

    background-color: #aaa;
}

/* line 12, ../src/scss/main.scss */
nav ul
{
    margin: 0;
    padding: 0;

    list-style: none;
}

/* line 18, ../src/scss/main.scss */
nav li
{
    display: inline-block;
}

/* line 20, ../src/scss/main.scss */
nav a
{
    display: block;

    padding: 6px 12px;

    text-decoration: none;
}

/* line 27, ../src/scss/main.scss */
.box
{
    -webkit-transform: rotate(35deg);
        -ms-transform: rotate(35deg);
            transform: rotate(35deg);
}

/* %message-shared is a placeholder class 
*  for been extended in real classes. */
/* line 31, ../src/scss/main.scss */
.message,
.success
{
    padding: 5rem;

    color: #333;
    border: 1px solid #ccc;
}

/* line 41, ../src/scss/main.scss */
.success
{
    border-color: green;
}

/* line 46, ../src/scss/main.scss */
a
{
    font-weight: 700;

    text-decoration: none;
}
/* line 49, ../src/scss/main.scss */
a:hover
{
    text-decoration: underline;
}
/* line 50, ../src/scss/main.scss */
body.firefox a
{
    font-weight: 500;
}

/* Making a compound selector with & (referencing parent selector) */
/* line 54, ../src/scss/main.scss */
#main
{
    color: black;
}
/* line 56, ../src/scss/main.scss */
#main-sidebar
{
    border: 1px solid;
}

/* Nested Properties */
/* line 60, ../src/scss/main.scss */
.funky
{
    font-family: Helvetica;
    font-size: 30em;
    font-weight: 400;
}

/* line 9, ../src/scss/includes/_mixins.scss */
body.firefox .headelem:before
{
    content: 'Hi, Firefox users!';
}

/* line 72, ../src/scss/main.scss */
#variable-defaults
{
    content: 'First content';
}
/* line 74, ../src/scss/main.scss */
#variable-defaults::before
{
    content: 'First time reference';
}

/* line 80, ../src/scss/main.scss */
section.info
{
    padding-top: 20rem;
    padding-bottom: 15rem;
}
/* line 2, ../src/scss/components/_card.scss */
section.info .cardInfoComponent
{
    border: 1px solid green;
    text-shadow: 0 0 12px #000;
}
/* line 6, ../src/scss/components/_card.scss */
section.info .cardInfoComponent .head
{
    font-size: 3rem;
}
/* line 10, ../src/scss/components/_card.scss */
section.info .cardInfoComponent .content
{
    font-size: 2rem;
}
/* line 13, ../src/scss/components/_card.scss */
section.info .cardInfoComponent .content a
{
    display: block;

    color: #fff;
    background-color: aqua;
}
/* line 18, ../src/scss/components/_card.scss */
section.info .cardInfoComponent .content a:hover
{
    background-color: aquamarine;
}

/* line 90, ../src/scss/main.scss */
.box-of-items .item-1
{
    width: 2em;
}

/* line 90, ../src/scss/main.scss */
.box-of-items .item-2
{
    width: 4em;
}

/* line 90, ../src/scss/main.scss */
.box-of-items .item-3
{
    width: 6em;
}

/* line 97, ../src/scss/main.scss */
.facebook-icon
{
    background-image: url('/image/icon/facebook.png');
}

/* line 97, ../src/scss/main.scss */
.linkedin-icon
{
    background-image: url('/image/icon/linkedin.png');
}

/* line 97, ../src/scss/main.scss */
.youtube-icon
{
    background-image: url('/image/icon/youtube.png');
}

/* line 97, ../src/scss/main.scss */
.instagram-icon
{
    background-image: url('/image/icon/instagram.png');
}

/* line 105, ../src/scss/main.scss */
.puma-icon
{
    cursor: default;

    border: 2px solid black;
    background-image: url('/images/puma.png');
}

/* line 105, ../src/scss/main.scss */
.sea-slug-icon
{
    cursor: pointer;

    border: 2px solid blue;
    background-image: url('/images/sea-slug.png');
}

/* line 105, ../src/scss/main.scss */
.egret-icon
{
    cursor: move;

    border: 2px solid white;
    background-image: url('/images/egret.png');
}

/* line 117, ../src/scss/main.scss */
.list-of-items .item-6
{
    width: 12em;
}

/* line 117, ../src/scss/main.scss */
.list-of-items .item-4
{
    width: 8em;
}

/* line 117, ../src/scss/main.scss */
.list-of-items .item-2
{
    width: 4em;
}

/* line 124, ../src/scss/main.scss */
.variable-arguments .shadows
{
    -webkit-box-shadow: 0 4px 5px #666, 2px 6px 10px #999;
            box-shadow: 0 4px 5px #666, 2px 6px 10px #999;
}

/* line 130, ../src/scss/main.scss */
.variable-arguments .primary
{
    color: #f00;
    border-color: #00f;
    background-color: #0f0;
}

/* line 135, ../src/scss/main.scss */
.variable-arguments .secondary
{
    color: #0f0;
    border-color: #f00;
    background-color: #00f;
}

/* line 143, ../src/scss/main.scss */
.colors
{
    color: white;
    border-color: blue;
    background-color: blue;
}

/* line 150, ../src/scss/main.scss */
#sidebar
{
    width: 240px;
}

/* The Block, Element, Modifier methodology (commonly referred to as BEM) 
* is a popular naming convention for classes in HTML and CSS.
* Another smart part of BEM is that everything is a class and nothing is nested.
* Here are some basic principles example... */
/* Block component */
/* line 159, ../src/scss/main.scss */
.btn
{
    background-color: #0f0;
}
/* line 162, ../src/scss/main.scss */
.btn__price
{
    margin-right: -10px;
    padding-right: 12px;
    padding-left: 12px;
    /* realign button text padding */

    opacity: .4;
    color: #fff;
    -webkit-border-radius: 5px 0 0 5px;
            border-radius: 5px 0 0 5px;
    /* Element that depends upon the block */
    background-color: #333;
}
/* line 172, ../src/scss/main.scss */
.btn__price--red
{
    /* Modifier */
    color: #f00;
}
/* line 178, ../src/scss/main.scss */
.btn--big
{
    /* Modifier */
    font-size: 28px;
    font-weight: 400;

    padding: 10px;
}
/* line 186, ../src/scss/main.scss */
.btn--orange
{
    color: white;
    /* Modifier that changes the style of the block */
    border-color: #ff4136;
    background-color: #ff4136;
}
/* line 193, ../src/scss/main.scss */
.btn--green
{
    color: white;
    /* Modifier */
    border-color: #3d9970;
    background-color: #3d9970;
}

@media only screen and (min-width: 1024px)
{
    /* line 2, ../src/scss/responsive/_main-media-queries.scss */
    body
    {
        font-size: 4rem;
    }
}

@media only screen and (min-width: 1366px)
{
    /* line 8, ../src/scss/responsive/_main-media-queries.scss */
    body
    {
        font-size: 4rem;
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
